import Button from "@/components/Button";
import Input from "@/components/Input";
import TodoItem from "@/components/TodoItem";
import axios from "axios";
import Head from "next/head";
import React, { useEffect, useState } from "react";
import ClipLoader from "react-spinners/ClipLoader";

type TaskType = {
  id: Number;
  name: String;
  completed: Boolean;
}[];

export default function Home() {
  const [tasks, setTasks] = useState<TaskType>([]);
  const [input, setInput] = useState("");
  const [loading, setLoading] = useState(false);
  const [taskLoading, setTaskLoading] = useState(false);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);

    const response = await axios.post("/api/todo", {
      name: input,
      completed: false,
    });
    if (response.status === 200) {
      setInput("");
      setLoading(false);
      getTasks();
    } else {
      setInput("");
      setLoading(false);
      alert("Error");
    }
  };

  const getTasks = async () => {
    setTaskLoading(true);
    const response = await axios.get("/api/todo");
    if (response.status === 200) {
      setTaskLoading(false);
      setTasks(response.data);
    } else {
      setTaskLoading(false);
    }
  };

  useEffect(() => {
    getTasks();
  }, []);
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="px-3">
        <h1 className="text-4xl text-center mt-8 font-bold uppercase text-gray-800">
          Todo List
        </h1>

        <form
          className="mx-auto mt-8 flex flex-col max-w-[350px]"
          onSubmit={handleSubmit}
        >
          <Input
            value={input}
            placeholder="Enter your Task"
            required
            onChange={(e: React.FormEvent<HTMLInputElement>) =>
              setInput(e.currentTarget.value)
            }
          />
          <Button loading={loading}>Submit</Button>
        </form>

        <div className="mt-8 max-w-[650px] mx-auto">
          {taskLoading ? (
            <div className="flex items-center justify-center mt-14">
              <ClipLoader color="#6D28D9" size={40} />
            </div>
          ) : (
            <>
              {tasks.length !== 0 ? (
                <>
                  {tasks.map((item, index) => (
                    <TodoItem
                      key={index}
                      id={item.id}
                      name={item.name}
                      completed={item.completed}
                    />
                  ))}
                </>
              ) : (
                <>
                  <div className="text-center mx-auto">No Tasks found!</div>
                </>
              )}
            </>
          )}
        </div>
      </main>
    </>
  );
}
